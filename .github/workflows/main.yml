name: Build, test and deliver containers

on: workflow_dispatch

jobs:
  bookinfoservice:
    runs-on: ubuntu-latest
    name: Java 11 build, test, deliver book-info-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Start Mysql for integration test
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'bookdb_test' # Optional, default value is "test". The specified database which will be created.
          mysql root password: ${{ secrets.MYSQL_ROOT_PASSWORD }} # Required if "mysql user" is empty, default is empty. The root superuser password
      
      - name: Build, test and package project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./book-info-service-ex
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=miverboven_book-info-service-ex

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/book-info-service-ex:latest ./book-info-service-ex

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/book-info-service-ex:latest
  reviewservice:
    runs-on: ubuntu-latest
    name: Java 11 build, test, deliver review-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Start MongoDB for integration test
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2

      - name: Build, test and package project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./review-service-ex
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=miverboven_review-service-ex

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/review-service-ex:latest ./review-service-ex

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/review-service-ex:latest
  edgeservice:
    runs-on: ubuntu-latest
    name: Java 11 build, test, deliver brank-edge-service container
    steps:
      - name: Check out repository
        uses: actions/checkout@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
        
      - name: Build, test and package project
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./brank-edge-service-ex
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=miverboven_brank-edge-service-ex
        
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/brank-edge-service-ex:latest ./brank-edge-service-ex

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/brank-edge-service-ex:latest